{"version":3,"sources":["credentials.js","Table.js","Contact.js","TotalValue.js","Deal.js","Location.js","Tag.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","Table","Component","className","x","parts","toString","split","replace","join","numberWithCommas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGeA,G,KAHC,4E,OCuEDC,GCnEOC,YCAGA,YCANA,YCAIA,YCALA,Y,4JLMd,WAMI,OACI,yBAASC,UAAU,UAAnB,SACI,wBAAOA,UAAU,SAAjB,UACI,gCACI,qBAAIA,UAAU,sBAAd,UACA,oBAAIA,UAAU,uBAAd,qBACA,oBAAIA,UAAU,uBAAd,yBACA,oBAAIA,UAAU,uBAAd,mBACA,oBAAIA,UAAU,uBAAd,kBACA,oBAAIA,UAAU,uBAAd,2BAGR,kCAQI,qBAAIA,UAAU,YAAd,UACI,oBAAIA,UAAU,aAAd,sBACA,oBAAIA,UAAU,GAAd,SA3BO,SAA0BC,GAC7C,IAAIC,EAAQD,EAAEE,WAAWC,MAAM,KAE/B,OADAF,EAAM,GAAKA,EAAM,GAAGG,QAAQ,wBAAyB,KAC9CH,EAAMI,KAAK,KAwBYC,CAAiB,OACnC,oBAAIP,UAAU,GAAd,eACA,oBAAIA,UAAU,GAAd,0BACA,oBAAIA,UAAU,GAAd,oBAEJ,qBAAIA,UAAU,YAAd,UACI,oBAAIA,UAAU,aAAd,sBACA,oBAAIA,UAAU,GAAd,kBACA,oBAAIA,UAAU,GAAd,eACA,oBAAIA,UAAU,GAAd,0BACA,oBAAIA,UAAU,GAAd,oBAEJ,qBAAIA,UAAU,YAAd,UACI,oBAAIA,UAAU,aAAd,sBACA,oBAAIA,UAAU,GAAd,kBACA,oBAAIA,UAAU,GAAd,eACA,oBAAIA,UAAU,GAAd,0BACA,oBAAIA,UAAU,GAAd,oBAEJ,qBAAIA,UAAU,YAAd,UACI,oBAAIA,UAAU,aAAd,sBACA,oBAAIA,UAAU,GAAd,kBACA,oBAAIA,UAAU,GAAd,eACA,oBAAIA,UAAU,GAAd,0BACA,oBAAIA,UAAU,GAAd,gC,GArDJD,cMSLS,E,4JAZb,WACG,OACE,oCACE,oBAAIR,UAAU,WAAd,8CACA,cAAC,EAAD,W,GALSD,aCOHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1561007f.chunk.js","sourcesContent":["const API_KEY = 'bcd062dedabcd0f1ac8a568cdcf58660c44d7e79b91763cc1a5d0c03d52c522d851fceb0';\n\n\nexport default API_KEY;","import React, {Component} from 'react';\nimport Contact from './Contact';\nimport TotalValue from './TotalValue';\nimport Deal from './Deal';\nimport Location from './Location';\nimport Tag from './Tag';\nimport './App.css';\n\n\nclass Table extends Component {\n    render() {\n        let numberWithCommas = function numberWithCommas(x) {\n            var parts = x.toString().split(\".\");\n            parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            return parts.join(\".\");\n        };\n        return (\n            <section className=\"section\">\n                <table className=\"legend\">\n                    <thead>\n                        <tr className=\"ac_lists-subheaders\">\n                        <th className=\"table-cell text_left\">Contact</th>\n                        <th className=\"table-cell text_left\">Total Value</th>\n                        <th className=\"table-cell text_left\">Deals</th>\n                        <th className=\"table-cell text_left\">Tags</th>\n                        <th className=\"table-cell text_left\">Location</th>\n                        </tr>\n                    </thead>\n                <tbody>\n                    {/* <tr className=\"table-row\">\n                        <td className=\"table-cell\"><Contact/></td>\n                        <td className=\"\"><TotalValue/></td>\n                        <td className=\"\"><Deal/></td>\n                        <td className=\"\"><Tag/></td>\n                        <td className=\"\"><Location/></td>\n                    </tr> */}\n                    <tr className=\"table-row\">\n                        <td className=\"table-cell\">John Doe</td>\n                        <td className=\"\">{numberWithCommas(1000)}</td>\n                        <td className=\"\">2</td>\n                        <td className=\"\">new-customer</td>\n                        <td className=\"\">USA</td>\n                    </tr>\n                    <tr className=\"table-row\">\n                        <td className=\"table-cell\">John Doe</td>\n                        <td className=\"\">1000</td>\n                        <td className=\"\">2</td>\n                        <td className=\"\">new-customer</td>\n                        <td className=\"\">USA</td>\n                    </tr>\n                    <tr className=\"table-row\">\n                        <td className=\"table-cell\">John Doe</td>\n                        <td className=\"\">1000</td>\n                        <td className=\"\">2</td>\n                        <td className=\"\">new-customer</td>\n                        <td className=\"\">USA</td>\n                    </tr>\n                    <tr className=\"table-row\">\n                        <td className=\"table-cell\">John Doe</td>\n                        <td className=\"\">1000</td>\n                        <td className=\"\">2</td>\n                        <td className=\"\">new-customer</td>\n                        <td className=\"\">USA</td>\n                    </tr>\n                </tbody>\n                </table>\n            </section>\n        )\n    }\n}\n\nexport default Table;","import React, {Component} from 'react';\nimport \"./App.css\"\nimport API_KEY from \"./credentials\";\n\nclass Contact extends Component {\n    state = {\n      isLoading: true,\n      users: [],\n      error: null\n    };\n    fetchUsers() {\n        const url = 'https://cors-anywhere.herokuapp.com/https://sahmed93846.activehosted.com/api/3/contacts';\n    const options = {\n        method: 'GET',\n        headers: {\n            \"Api-Token\": `${API_KEY}`,\n            \"Accept\": \"application/json\"\n            }\n        };\n      return fetch(url, options)\n        .then(response => response.json())\n        .then(data => this.setState({\n            users: data.contacts,\n            isLoading: false,\n          })\n        )\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n  \n    componentDidMount() {\n      this.fetchUsers();\n    }\n    render() {\n      const { isLoading, users, error } = this.state;\n      console.log(users);\n      return (\n        <React.Fragment>\n          {error ? <p>{error.message}</p> : null}\n          {!isLoading ? (\n            users.map(user => {\n              const { firstName, lastName } = user;\n              return (\n                <td className=\"table-cell name\">\n                  <p>{firstName} {lastName}</p>\n                </td>\n              );\n            })\n          ) : (\n              <td><p>Loading ...</p></td>\n          )}\n          {\n       }\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default Contact;\n","import React, {Component} from 'react';\nimport \"./App.css\"\nimport API_KEY from \"./credentials\";\n\nclass TotalValue extends Component {\n    state = {\n      isLoading: true,\n      deals: [],\n      error: null\n    };\n    fetchValues() {\n        const url = 'https://cors-anywhere.herokuapp.com/https://sahmed93846.activehosted.com/api/3/deals?orders[title]=ASC&orders[value]=ASC&orders[cdate]=ASC&orders[contact_name]=ASC&orders[contact_orgname]=ASC&orders[next-action]=ASC';\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Api-Token\": `${API_KEY}`,\n                \"Accept\": \"application/json\"\n                }\n            };\n      return fetch(url, options)\n        .then(response => response.json())\n        .then(data => this.setState({\n            deals: data.deals,\n            isLoading: false,\n          })\n        )\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n  \n    componentDidMount() {\n      this.fetchValues();\n    }\n    render() {\n      const { isLoading, deals, error } = this.state;\n      let numberWithCommas = function numberWithCommas(x) {\n        var parts = x.toString().split(\".\");\n        parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        return parts.join(\".\");\n    };\n      console.log(deals);\n      return (\n        <React.Fragment>\n          {error ? <p>{error.message}</p> : null}\n          {!isLoading ? (\n            deals.map(deal => {\n              const { activityCount, value, currency} = deal;\n              return (\n                <td className=\"table-cell name\">\n                  <p> {activityCount} ${numberWithCommas(value)} {currency}</p>\n                </td>\n              );\n            })\n          ) : (\n              <td><p>Loading ...</p></td>\n          )}\n          {\n       }\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default TotalValue;\n","import React, {Component} from 'react';\nimport \"./App.css\"\nimport API_KEY from \"./credentials\";\n\nclass Deal extends Component {\n    state = {\n      isLoading: true,\n      deals: [],\n      error: null\n    };\n    fetchDeals() {\n        const url = 'https://cors-anywhere.herokuapp.com/https://sahmed93846.activehosted.com/api/3/deals?orders[title]=ASC&orders[value]=ASC&orders[cdate]=ASC&orders[contact_name]=ASC&orders[contact_orgname]=ASC&orders[next-action]=ASC';\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Api-Token\": `${API_KEY}`,\n                \"Accept\": \"application/json\"\n                }\n            };\n      return fetch(url, options)\n        .then(response => response.json())\n        .then(data => this.setState({\n            deals: data.deals,\n            isLoading: false,\n          })\n        )\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n  \n    componentDidMount() {\n      this.fetchDeals();\n    }\n    render() {\n      const { isLoading, deals, error } = this.state;\n      console.log(deals);\n      return (\n        <React.Fragment>\n        {/* <h1>Hello Deal</h1> */}\n          {error ? <p>{error.message}</p> : null}\n          {!isLoading ? (\n            deals.map(deal => {\n              const {stage} = deal;\n              return (\n                <td className=\"table-cell name\">\n                  <p>{stage}</p>\n                  <hr />\n                </td>\n              );\n            })\n          ) : (\n              <td><p>Loading ...</p></td>\n          )}\n          {\n       }\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default Deal;\n","import React, {Component} from 'react';\nimport \"./App.css\"\nimport API_KEY from \"./credentials\";\n\nclass Location extends Component {\n    state = {\n      isLoading: true,\n      locations: [],\n      error: null\n    };\n    fetchLocations() {\n        const url = 'https://cors-anywhere.herokuapp.com/https://sahmed93846.activehosted.com/api/3/addresses/';\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Api-Token\": `${API_KEY}`,\n                \"Accept\": \"application/json\"\n                }\n            };\n      return fetch(url, options)\n        .then(response => response.json())\n        .then(data => this.setState({\n            locations: data.addresses,\n            isLoading: false,\n          })\n        )\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n  \n    componentDidMount() {\n      this.fetchLocations();\n    }\n    render() {\n      const { isLoading, locations, error } = this.state;\n      console.log(locations);\n      return (\n        <React.Fragment>\n        {/* <h1>Hello Location</h1> */}\n          {error ? <p>{error.message}</p> : null}\n          {!isLoading ? (\n            locations.map(location => {\n              const { city, state } = location;\n              return (\n                <td className=\"table-cell name\">\n                  <p> {city}, {state}</p>\n                </td>\n              );\n            })\n          ) : (\n              <td><p>Loading ...</p></td>\n          )}\n          {\n       }\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default Location;\n","import React, {Component} from 'react';\nimport \"./App.css\"\nimport API_KEY from \"./credentials\";\n\nclass Tag extends Component {\n    state = {\n      isLoading: true,\n      tags: [],\n      error: null\n    };\n    fetchDeals() {\n        const url = 'https://cors-anywhere.herokuapp.com/https://sahmed93846.activehosted.com/api/3/tags';\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Api-Token\": `${API_KEY}`,\n                \"Accept\": \"application/json\"\n                }\n            };\n      return fetch(url, options)\n        .then(response => response.json())\n        .then(data => this.setState({\n            tags: data.tags,\n            isLoading: false,\n          })\n        )\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n  \n    componentDidMount() {\n      this.fetchDeals();\n    }\n    render() {\n      const { isLoading, tags, error } = this.state;\n      console.log(tags);\n      return (\n        <React.Fragment>\n        {/* <h1>Hello Deal</h1> */}\n          {error ? <p>{error.message}</p> : null}\n          {!isLoading ? (\n            tags.map(t => {\n              const {tag} = t;\n              return (\n                <td className=\"table-cell name\">\n                  <p>{tag}</p>\n                </td>\n              );\n            })\n          ) : (\n              <td><p>Loading ...</p></td>\n          )}\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default Tag;\n","import React, {Component} from 'react';\nimport Table from './Table';\nimport './App.css';\n// import 'camp-css';\n\nclass App extends Component {\n  render() {\n     return(\n       <section>\n         <h1 className=\"mint App\">Active Campaign Coding Challenge</h1>\n         <Table/>\n       </section>\n\n     )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}